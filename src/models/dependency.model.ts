import dependencyType from "../enums/dependencyType.js";
import vulnerabilityLevel from "../enums/vulnerabilityLevel.js";

export interface Dependency {
    id: string;
    name: string;
    version: string;
    type: dependencyType;
    vulnerability_level: vulnerabilityLevel;
}

class DependencyModel {
    public dependencies: Dependency[] = [
        {
            id: '0',
            name: 'serve-static',
            version: '1.1.0',
            type: dependencyType.NPM,
            vulnerability_level: vulnerabilityLevel.NONE,
        },
        {
            id: '1',
            name: 'phpseclib/phpseclib',
            version: '3.0.33',
            type: dependencyType.COMPOSER,
            vulnerability_level: vulnerabilityLevel.NONE,
        }
    ];

    public async findAllByType(type: dependencyType): Promise<Dependency[]> {
        return this.dependencies.filter(dependency => dependency.type === type);
    }

    public async update(newDependencies: Dependency[]): Promise<void> {
        for (const newDependency of newDependencies) {
            const index = this.dependencies.findIndex(dependency => dependency.id === newDependency.id);
            this.dependencies[index] = newDependency;
        }
    }
}

export default new DependencyModel();
