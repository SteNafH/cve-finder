import vulnerabilityLevel from "../../enums/vulnerabilityLevel.js";

export interface Advisory {
    id: number;
    url: string;
    title: string;
    severity: string;
    vulnerable_versions: string;
    cwe: string[];
    cvss: {
        score: number;
        vectorString: string | null;
    };
}

class NpmRegistryService {
    public async getAdvisories(dependencies: Record<string, string[]>): Promise<Record<string, Advisory[]>> {
        const response = await fetch(`https://registry.npmjs.com/-/npm/v1/security/advisories/bulk`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dependencies)
        });

        if (response.status === 200)
            return await response.json();

        throw new Error('Npm registry error');
    }

    public getVulnerabilityLevel(cvssScore: number): vulnerabilityLevel {
        if (cvssScore >= 7)
            return vulnerabilityLevel.HIGH;

        if (cvssScore >= 4)
            return vulnerabilityLevel.MEDIUM;

        if (cvssScore > 0)
            return vulnerabilityLevel.LOW;

        return vulnerabilityLevel.NONE;
    }
}

export default new NpmRegistryService();
